enum TypeCompte {
  COURANT
  EPARGNE
}

type Query {
  allComptes: [Compte]
  compteById(id: ID): Compte
  totalSolde: SoldeStats
  searchByType(type: TypeCompte): [Compte]
  transactionsByCompteId(compteId: ID): [Transaction]

}
type Transaction {
  id: ID
  compteId: ID
  montant: Float
  type: String
  dateTransaction: String
}

type Compte {
  id: ID
  solde: Float
  dateCreation: String
  type: TypeCompte
}

type Mutation {
  saveCompte(compte: CompteInput): Compte
  deleteById(id: ID): Boolean
  addTransaction(compteId: ID!, montant: Float!, type: String!): Transaction

}

input CompteInput {
  solde: Float
  dateCreation: String
  type: TypeCompte
}

input CompteRequest {
  solde: Float
  dateCreation: String
  type: TypeCompte
}

type SoldeStats {
  count: Int
  sum: Float
  average: Float
}
